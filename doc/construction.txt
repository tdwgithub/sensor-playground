

Construction notes.


Copyright Notice

Copyright (c) 2022, tdwgithub
All rights reserved.

Redistribution and use in source and binary forms, with or without
modification, are permitted provided that the following conditions are met:
1. Redistributions of source code must retain the above copyright notice, this
   list of conditions and the following disclaimer.
2. Redistributions in binary form must reproduce the above copyright notice,
   this list of conditions and the following disclaimer in the documentation
   and/or other materials provided with the distribution.
THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE
FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR
SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER
CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,
OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.



Introducion

The minimum configuration you need for the Sensor Playground includes only:

1. The power-supply section.
2. The processor module section.

Everything else is your choice.  However, this document outlines some of the 
steps you'll need to take to pull off a successful build.


Power Supply

For this section, you will need the following components:

- D1 (1N4007 Diode).
- C1 (33uF Electrolytic Capacitor)
- U2 (LM1117-3.3) Three-terminal regulator
- C2 (33uF Electrolytic Capacitor)
- F1 (LittelFuse LVR100) (Optional)
- R1 (1K-ohm, 14/watt) Resistor.
- LED1 (Standard 5.0mm through-hole) LED
- USB_Power1 (DIYMall Micro-USB Power Adapter: https://www.amazon.com/gp/product/B07B5ZDLJY/ref=ppx_yo_dt_b_asin_title_o05_s00?ie=UTF8&psc=1)
- PJ2 (3-pin male header, optional)

1. You'll first need to solder the 5-pin header to the micro-USB power adapter.
   This header is included with the package.  Make sure to solder the side of
   the header that has the *shorter* pins into the power adapter board.
   
2. Insert the longer pins of the newly-built micro-USB power supply adapter into
   the Sensor Playground and solder.
   
3. Install D1 and solder.  Note the orientation.  The PCB shows a '+' & '-' symbol on
   either end of the outline.  Make sure to install the end of the diode that has the
   stripe into the '-' side.
   
4. If you want to use a fuse, insert that into the board where "Fuse" has been 
   labeled.  If you decide you don't need the fuse, you can use a piece of solid-core
   wire in its place.  Make sure the gauge is reasonable to avoid high resistance
   and potential heating/melting.
   
5. Insert C1 & C2 and solder.  Note that the footprints on the PCB are marked with
   '+' & '-' symbols.  When inserting the capacitors, make sure you orient them to
   the correct polarity!  Solder.
   
6. Insert the LED and solder.  Again, this is polarity-dependent. Typical through-hole
   LED's have one side that has been flattened.  That side is typically the negative.
   
7. Insert and solder R1 (1K Ohm, 1/4 watt through-hole).

8. If you want to have a convenient place to verify the 5V, 3.3V & GND of the PCB, you
   can install PJ2.  This is a simple 3-pin 0.1" make header.  Insert the side with the
   short pins and solder.


Processor

Generally speaking, in order to maintain as much flexibility as possible, I recommend 
that you use female sockets for the processor module(s).  This allows you to remove the
modules if needed (and there occasions where that is indeed necessary).  Depending on
the level of flexibility you need, you can choose to populate the sockets for both the
ESP32 DevKit modules and the Feather modules, or you can elect to populate only the 
sockets for the style you'll use.  

For either the ESP32 DevKit or the Feather modules, you'll need to install:

- C3 (0.1uF bypass capacitor)
- C4 (0.1uF bypass capacitor)

For the ESP32 DevKit modules, you will need:

- (2x) 0.1", 19-pin female socket header (DigiKey PN: ???)

Insert the sockets into each of the *outer* set of holes for U1 (you'll see labels at the 
bottom of the PCB with the text "ESP32" and just above that "Feather").  Solder each socket
header.

For Feather form-factor modules, you need:

- (1x) 0.1", 16-pin female socket header (DigiKey PN: ???)
- (1x) 0.1", 12-pin female socket header (DigiKey PN: ???)

Insert and solder the 12-pin female socket header into the *inner* set of holes on the left
side of the U1 footprint. Next, insert and solder the 16-pin female socket heaer into the 
*inner* set of holes on the right side of the U1 footprint.

As far was what I would describe as "required" components, that's about it. Of course,
if you want to *do* something with the board, you'll probably want to add a bit more to
it...

Encoder/Buttons

The rotary encoder and buttons provide a means for user input. With these and a display, you 
can createa pretty rich user experience.  The encoder itself has a button, so with the two
board-mount buttons, the encoder button and the encoder itself, you have a means to rotate
between options in a hierarchical menu system.

I'll provide example code to show how this can be accomplished.  If you do choose to install
the rotary encoder and buttons, here's what you need:

- (1x) ENC1 (Alps EC11E) Rotary Encoder
- (2x) PB1 & PB2 (6mm, PCB-mount pushbutton)
- (3x) ER1, ER2 & ER3 (10k ohm, 1/4-watt resistor)
- (2x) RB1 & RB2 (10k ohm, 1/4-watt resistor)
- (1x) 0.1" 4-pin make header. (optional)

You should probably install the puull-up resistors (ER1, ER2, ER3, RB1 & RB2) first, as these 
are the lowest profile components of this section. 

Once you've installed the oull-ups, install the push buttons.  These have 2 pins on either side
and it doesn't matter which way you choose to install them.  Insert and install both.

Finally, install the encoder.  It has 3 pins on one side and 2 on the other.  Orient the encoder
accordingly, then solder it in place.

If you have interest in accessing the IO lines that the encoder and buttons use, you can install
the 4-pin male header (see the list above).  Insert the side with the shorter pins into the PCB
and solder.

Of course, using the encoder and buttons probably makes most sense when used in conjunction with
a display.  That said, you don't have to.  As an example, you could choose to only install one 
or both of the PCB-mount buttons and use them to control your code *without* the need for a 
display.  Similarly, you could write your code to make use of the encoder, and not have a 
display.  It's totally up to you.  What was in my mind during the design was the combine the
display, buttons and encoder into a nice little menu-driven system.  To each his own... :-)

Everything Else

Before we get to the specifics, I want to make a few other points about how you can use things
on this board.

When it comes to all the connection points for the I2C/SPI/UART and Power, you get to choose 
whether you want to use:

- Solder your stuff directly, using the holes at those footprints.
- Use male, 0.1" header pins
- Use female, 0.1" header sockets.
- Something else (Not sure what, but you can if you'd like)

Those connection points are yours to use as you like.  Same goes for the mounting holes that
are scattered across the top 2/3 of the board.  

I designed the PCB to place the display(s) that I use in the upper-right of the PCB, but once
again, you don't need to use the connector up there (AF-OLED091) for that purpose.

I'm guessing you've realized by now that you can pretty much do what you choose on this board,
and get something running that you want.  Sorry to keep pounding on that point.

Ok, *now* Everything Else

From here on, what you choose to populate is even more specific to your application requirements.
In the center of the PCB, you'll find three footprints that provide access to the I2C:  
(SF-SCD4x1, SF-SGPx1, & AF-MTU21D1). The center footprint (AF-MTU21D1) is pinned-out slightly 
differently than the outer 2.  This was to allow me to plug in a few different sensor boards, 
whose connectors werent' pinned the same way.  However since you can set things up as you need to, 
this difference gives you a bit of added flexibilty when configuring your application.   In any case, 
the I2C lines, power and ground are common to each.

More toward the top of the PCB, you'll find another set of three 0.1" pin footprints (from left to
right: AF-PM25x1, SJ1 & SJ2).  SJ1 & Sj2 provide access to the SPI lines of the processor, with 2
different "enable" lines (no power available here, but just across from them are the I2C connectors
that have 3.3V & GND).  AFPM25x1 brings out a UART (Tx/Rx only), along with +5V & GND.

Inside the large rectangular outline at the top left of the PCB is another 5-pin footprint (PP5).
This simply provides another connection point for the +5V, +3.3V & GND buses.  


(INCOMPLETE)
